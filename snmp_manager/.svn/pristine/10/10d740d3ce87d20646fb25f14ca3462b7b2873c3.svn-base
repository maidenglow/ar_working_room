package com.eluon.pim.snmp.service;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.snmp4j.CommunityTarget;
import org.snmp4j.PDU;
import org.snmp4j.Snmp;
import org.snmp4j.Target;
import org.snmp4j.TransportMapping;
import org.snmp4j.mp.SnmpConstants;
import org.snmp4j.smi.Address;
import org.snmp4j.smi.GenericAddress;
import org.snmp4j.smi.OID;
import org.snmp4j.smi.OctetString;
import org.snmp4j.smi.VariableBinding;
import org.snmp4j.transport.DefaultUdpTransportMapping;
import org.snmp4j.util.DefaultPDUFactory;
import org.snmp4j.util.TreeEvent;
import org.snmp4j.util.TreeUtils;

public class SnmpCommonService {

	private Snmp snmp;
	private String ipAddress;

	public SnmpCommonService(){
		try {
			
			// SNMP 객체 생성
			TransportMapping<?> transport = new DefaultUdpTransportMapping();
			snmp = new Snmp(transport);
			transport.listen();

		} catch (IOException e) {
			throw new RuntimeException(e);
		}
	}

	private Target getTarget() {
		Address targetAddress = GenericAddress.parse(ipAddress);
		CommunityTarget target = new CommunityTarget();
		target.setCommunity(new OctetString("public"));
		target.setAddress(targetAddress);
		target.setRetries(2);
		target.setTimeout(1500);
		target.setVersion(SnmpConstants.version2c);
		return target;
	}
	
	public void setIpAddress(String ipAddress) {
		this.ipAddress = ipAddress;
	}

	protected Map<String,String> getResultMap(String oid){

		Map<String,String> result = new HashMap<String, String>();

		TreeUtils treeUtils = new TreeUtils(snmp, new DefaultPDUFactory(PDU.GETNEXT));
		List<TreeEvent> events = treeUtils.getSubtree(getTarget(), new OID(oid));

		for (TreeEvent event : events) {
			if (!event.isError()) { 
				VariableBinding[] varBindings = event.getVariableBindings(); 

				for (VariableBinding varBinding : varBindings) { 
					varBinding.toValueString(); 
					result.put(varBinding.getOid().toString().split(oid+".")[1], varBinding.toValueString());
				}
			}
			// TODO : 에러 상황에 대한 처리 필요 
		}

		return result;
	}
	
//	불필요... 삭제 예정
//	public JSONObject getResultJson(String oid){
//		return new JSONObject(getResultMap(oid)); 
//	}
}
